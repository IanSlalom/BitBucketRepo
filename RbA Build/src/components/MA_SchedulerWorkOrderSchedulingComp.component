<!--**********************************************************************************-->
<!--                                                                                  -->
<!--      This component is used to schedule a work order to a specific               -->
<!-- 	  booking window 															  -->
<!--                                                                                  -->
<!--      @author     Daniel Taylor   (MapAnything)                                   -->
<!--                                                                                  -->
<!--      @version    6/29/2016   MapAnything                                         -->
<!--      Created                                                                     -->
<!--                                                                                  -->
<!--      @copyright (c)2016 MapAnything. All Rights Reserved.                        -->
<!--      Unauthorized use is prohibited                                              -->
<!--                                                                                  -->
<!--**********************************************************************************-->

<apex:component controller="MA_SchedulerController">

	<script>
	    $ = jQuery.noConflict();

	    var forceScheduleAssignmentCombo = false;
	    var apexSchedulingController = 'MA_SchedulerController';
	    var processBookingResponse = { onSuccess: processBookingSuccess, onFailure: processResponseError };
	    var processAvailabilityResponse = { onSuccess: processAvailabilitySuccess, onFailure: processResponseError };
	    var processWorkOrderRetrievalResponse = { onSuccess: processWorkOrderRetrievalSuccess, onFailure: processResponseError };

	    $(function() {
	        sforce.connection.sessionId = '{!$Api.Session_Id}';

	        $('#availabilityStartDate, #availabilityEndDate').datepicker();

	        var tomorrow = moment(new Date()).add(1, 'days');

	        var times = [];
	        var timeOptions = '';

	        for (var i = 0, len = 12; i < len; i++) {
	            var hour = i == 0 ? 12 : i;
	            times.push(hour+':00');
	            times.push(hour+':30');
	        }

	        for (var i = 0, len = times.length; i < len; i++) {
	            timeOptions += '<option value="' + times[i] + '">' + times[i] + '</option>';
	        }
	        $('#scheduleWorkOrder .startTime, #scheduleWorkOrder .endTime').append(timeOptions);
	    });

	    /************************************************************/
        /*                                                  		*/
        /*      this method opens the check availability modal 		*/
        /*                                                 		 	*/
        /************************************************************/
        function showAvailabilityModal(isForcedNextStep, isReschedule) {
			var workOrderId;
			forceScheduleAssignmentCombo = false;

			if (isForcedNextStep) {
				workOrderId = $('#assignResourceWorkOrderId').val();
			}
			else if (isReschedule) {
				$('#rescheduleReasonRow').show();
				workOrderId = $('#eventOptionsRecordId').val();
			}
			else {
				$('#rescheduleReasonRow').hide();
				workOrderId = $('#listViewOptionsRecordId').val();
			}

			$('#lastRescheduleReasonRow, #lastCancelReasonRow, #lastWorkOrderCrewRow, #lastWorkOrderStainerRow, #lastWorkOrderTechMeasureRow').hide();
			$('#scheduleWorkOrderShipDate').text('');
			$('#scheduleWorkOrderShipDateRow').hide();
			$('#lastRescheduleReason, #lastCancelReason, #lastWorkOrderCrew, #lastWorkOrderStainer, #lastWorkOrderTechMeasure').text('');
			$('.rescheduleReason').val('');
			$('#workOrderId').val(workOrderId);
			$('#availableSlots, #unAvailableSlots').html('');
			$('#availableSlotsContainer, #showUnAvailable, #unAvailableSlotsContainer, .invisibleRow').hide();
			$('#scheduleWorkOrderModal').fadeIn('fast');
			$('#loaderModal').show();
			$('#scheduleWorkOrderModal').addClass('ma-open');
			$('#scheduleWorkOrderOverlay').addClass('ma-in');
			$('body').css('overflow','hidden');

			sforce.apex.execute(apexSchedulingController, 'retrieveRecords', {objType: 'WorkOrder', filters: 'Id = \'' + workOrderId + '\''}, processWorkOrderRetrievalResponse);
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method populates work order 					*/
        /* 		related fields on the availability modal 			*/
        /*                                                 		 	*/
        /************************************************************/
        function processWorkOrderRetrievalSuccess(response) {
		    response = JSON.parse(response);

		    if (response.success) {
		        for (var i = 0, len = response.objList.length; i < len; i++) {
		            var record = response.objList[i];
		            $('#workOrderName').text(record.Name);
		            $('#workOrderType').text(record.Work_Order_Type__c);
		            $('.rescheduleReason').val(record.Reschedule_Reason__c);

		            if (record.Work_Order_Type__c == 'Install' && (!record.Assigned_Resources__r || record.Assigned_Resources__r.length == 0)) {
		            	forceScheduleAssignmentCombo = true;
		            }

		            var address = record.Street__c + ', ' + record.City__c + ', ' + record.State__c + ' ' + record.Zip__c;
		            address = formatAddress(address);
		            $('#workOrderAddress').text(address);

		            if (record.Sold_Order__r != null && record.Sold_Order__r != undefined) {
		            	var soldOrder = record.Sold_Order__r;
		            	if (soldOrder.Original_Crew__c != '' && soldOrder.Original_Crew__c != undefined && soldOrder.Original_Crew__c != null) {
			            	$('#lastWorkOrderCrew').text(soldOrder.Original_Crew__c);
			            	$('#lastWorkOrderCrewRow').show();
			            }

		            	if (soldOrder.Original_Stainer__c != '' && soldOrder.Original_Stainer__c != undefined && soldOrder.Original_Stainer__c != null) {
			            	$('#lastWorkOrderStainer').text(soldOrder.Original_Stainer__c);
			            	$('#lastWorkOrderStainerRow').show();
			            }

		            	if (soldOrder.Original_Tech_Measure__c != '' && soldOrder.Original_Tech_Measure__c != undefined && soldOrder.Original_Tech_Measure__c != null) {
			            	$('#lastWorkOrderTechMeasure').text(soldOrder.Original_Tech_Measure__c);
			            	$('#lastWorkOrderTechMeasureRow').show();
			            }
		            }

		            if (record.Reschedule_Reason__c != '' && record.Reschedule_Reason__c != undefined && record.Reschedule_Reason__c != null) {
		            	var reasonDate = '';
		            	if (record.Reschedule_Date__c != '' && record.Reschedule_Date__c != undefined && record.Reschedule_Date__c != null) {
		            		reasonDate = ' on ' + moment(new Date(record.Reschedule_Date__c)).format('MM/DD/YYYY');
		            	}

		            	$('#lastRescheduleReason').text(record.Reschedule_Reason__c + reasonDate);
		            	$('#lastRescheduleReasonRow').show();
		            }

		            if (record.Cancel_Reason__c != '' && record.Cancel_Reason__c != undefined && record.Cancel_Reason__c != null) {
		            	var reasonDate = '';
		            	if (record.Cancel_Date__c != '' && record.Cancel_Date__c != undefined && record.Cancel_Date__c != null) {
		            		reasonDate = ' on ' + moment(new Date(record.Cancel_Date__c)).format('MM/DD/YYYY');
		            	}

		            	$('#lastCancelReason').text(record.Cancel_Reason__c + reasonDate);
		            	$('#lastCancelReasonRow').show();
		            }

		            if (record.Estimated_Ship_Date__c != '' && record.Estimated_Ship_Date__c != undefined && record.Estimated_Ship_Date__c != null) {
		            	var shipDate = new Date(record.Estimated_Ship_Date__c);
		            	shipDate = correctForTimezoneOffset(shipDate)
		            	$('#scheduleWorkOrderShipDate').text(shipDate.format('m/d/Y'));
		            	$('#scheduleWorkOrderShipDateRow').show();
		            }

		            if (record.Contact__c == '' || record.Contact__c == undefined || record.Contact__c == null) {
		                $('#workOrderContactName').text('');
		                $('#workOrderContactPhone').text('');
		                $('#workOrderContactMobilePhone').text('');
		                $('#workOrderContactBusinessPhone').text('');
		            }
		            else {
		                $('#workOrderContactName').text(record.Contact__r.LastName + (record.Contact__r.FirstName == '' || record.Contact__r.FirstName == undefined || record.Contact__r.FirstName == null ? '' : ', ' + record.Contact__r.FirstName));
		            	$('#workOrderContactPhone').text(record.Contact__r.HomePhone);
		            	$('#workOrderContactMobilePhone').text(record.Contact__r.MobilePhone);
		            	$('#workOrderContactBusinessPhone').text(record.Contact__r.Phone);
		            }

		            if (record.Appointment_Duration__c == '' || record.Appointment_Duration__c == undefined || record.Appointment_Duration__c == null) {
		                $('#workOrderDuration').text('unknown');
		            }
		            else {
		                $('#workOrderDuration').text(record.Appointment_Duration__c);
		            }
		        }

		        checkAvailability(true);
		    }
		    else {
		        handleError('MA_SchedulerWorkOrderSchedulingComp : showAvailabilityModal', response);
		    }
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method sends request to retrieve 				*/
        /* 		available booking windows 				 			*/
        /*                                                 		 	*/
        /************************************************************/
        function checkAvailability(nextAvailable) {
		    $('#loaderModal').show();
		    $('#availableSlots, #unAvailableSlots').html('');

			var startDate, startTime;
			var endDate, endTime;

			if (nextAvailable) {
				var tomorrow = moment(new Date()).add(1, 'days');
				var shipDate = moment(new Date($('#scheduleWorkOrderShipDate').text())).add(3, 'days');

				if (shipDate > tomorrow) {
					tomorrow = shipDate;
				}

				startDate = tomorrow.format('MM/DD/YYYY');
				endDate = tomorrow.add(1, 'months').format('MM/DD/YYYY');
				startTime = endTime = '12:00 am';
			}
			else {
			    startDate = $('#availabilityStartDate').val();
			    startTime = $('#scheduleWorkOrder .startTime').val() + ' ' + $('input[type="radio"][name="availableStartTime"]:checked').val();

				endDate = $('#availabilityEndDate').val();
				endTime = $('#scheduleWorkOrder .endTime').val() + ' ' + $('input[type="radio"][name="availableEndTime"]:checked').val();

				if (startDate == undefined || startDate == null || startDate == '' || endDate == undefined || endDate == null || endDate == '') {
					handleError('MISSING DATE(S)', { 'error' : 'You must enter a start and end date range before checking availablity'});
					return;
				}
			}

		    var startDateTime = new Date(startDate + ' ' + startTime);
			var endDateTime = new Date(endDate + ' ' + endTime);
			var offsetMinutes = startDateTime.getTimezoneOffset();

			sforce.apex.execute(apexSchedulingController, 'checkAvailability', {workOrderId: $('#workOrderId').val(), startDateTimeEpoch: Date.parse(startDateTime), endDateTimeEpoch: Date.parse(endDateTime), offsetPageMinutes: offsetMinutes, nextAvailable: nextAvailable}, processAvailabilityResponse);
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method process the available booking 			*/
        /* 		window response and displays the results 			*/
        /* 		on the availability modal 							*/
        /*                                                 		 	*/
        /************************************************************/
        function processAvailabilitySuccess(response) {
		    response = JSON.parse(response);
		    console.log(response);

		    if (response.success) {
		    	if (response.nextAvailable) {
					var nextAvailableHtml = '';
			        for (var i = 0, len = response.bookingWindows.length; i < len; i++) {
			            var nextAvailableWindow = response.bookingWindows[i];
			            nextAvailableHtml += '<div class="bookingWindow"><input type="radio" name="bookingWindow" onchange="selectNextAvailable()" value="' + nextAvailableWindow.startDateTimeFormated + ' - ' + nextAvailableWindow.endDateTimeFormated + '">' + nextAvailableWindow.dayOfWeek + ' ' + nextAvailableWindow.startDateTimeFormated + '</input></div>';
			        }

			        if (nextAvailableHtml == '') {
			            nextAvailableHtml = '<div class="ma-alert ma-alert-red">No timeslots available within a month.</div>';
			        }

			        $('#nextAvailableSlots').html(nextAvailableHtml);
		    	}
		    	else {
		    		var bookingWindowHtml = '';
			        for (var i = 0, len = response.bookingWindows.length; i < len; i++) {
			            var bookingWindow = response.bookingWindows[i];
			            bookingWindowHtml += '<div class="bookingWindow"><input type="radio" name="bookingWindow" onchange="selectNextAvailable()" value="' + bookingWindow.startDateTimeFormated + ' - ' + bookingWindow.endDateTimeFormated + '">' + bookingWindow.dayOfWeek + ' ' + bookingWindow.startDateTimeFormated + '</input></div>';
			        }

			        if (bookingWindowHtml == '') {
			            bookingWindowHtml = '<div class="ma-alert ma-alert-red">No timeslots available during the selected times.</div>';
			        }

		    		var unAvailableSlotsHtml = '';
			        for (var i = 0, len = response.unAvailableSlots.length; i < len; i++) {
			            var unAvailableSlot = response.unAvailableSlots[i];
			            unAvailableSlotsHtml += '<div class="bookingWindow"><input type="radio" name="bookingWindow" onchange="selectNextAvailable()" value="' + unAvailableSlot.startDateTimeFormated + ' - ' + unAvailableSlot.endDateTimeFormated + '">' + unAvailableSlot.dayOfWeek + ' ' + unAvailableSlot.startDateTimeFormated + '</input></div>';
			        }

			        if (unAvailableSlotsHtml == '') {
			            unAvailableSlotsHtml = '<div class="ma-alert ma-alert-red">All Slots Available</div>';
			        }
			        else {
			        	$('#showUnAvailable').show();
			        	$('#unAvailableSlots').html(unAvailableSlotsHtml);
			        }

			        $('#availableSlots').html(bookingWindowHtml);
			        $('#availableSlotsContainer').show();
			        $('.show-available-timeslots').show();
			    }

		        $('#loaderModal').hide();
		    }
		    else {
		        handleError('MA_SchedulerWorkOrderSchedulingComp : checkAvailability', response);
		    }
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method shows/hides the unavailable windows 	*/
        /*                                                 		 	*/
        /************************************************************/
        function showUnavailableSlots() {
			$('#unAvailableSlotsContainer').toggle();
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method schedules the work order to the 		*/
        /*		selected window 									*/
        /*                                                 		 	*/
        /************************************************************/
        function saveScheduleWorkOrder() {
		    $('#loaderModal').show();

		    var selectedWindow = $('#scheduleWorkOrderModal input[type="radio"][name="bookingWindow"]:checked').val();
		    if (selectedWindow == '' || selectedWindow == undefined || selectedWindow == null) {
		        handleError('NO TIME SELECTED', { error: 'A time window must be selected before booking' });
		        return;
		    }

		    var rescheduleReason = $('.rescheduleReason').val();

		    sforce.apex.execute(apexSchedulingController, 'scheduleWorkOrder', {workOrderId: $('#workOrderId').val(), selectedWindow: selectedWindow, rescheduleReason: rescheduleReason}, processBookingResponse);
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method process the save requests results		*/
        /*                                                 		 	*/
        /************************************************************/
        function processBookingSuccess(response) {
		    response = JSON.parse(response);

		    if (response.success) {
		        $('.listViewportWrapper .refreshListButton').click();
		        $('#calendar').fullCalendar('refetchEvents');

		    	if (forceScheduleAssignmentCombo) {
		    		showAssignResourceModal(true, false, false);
		    	}

		        closeScheduleWorkOrderModal();
		    }
		    else {
		        handleError('MA_SchedulerWorkOrderSchedulingComp : saveScheduleWorkOrder', response);
		    }
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method closes the availability modal 			*/
        /*                                                 		 	*/
        /************************************************************/
        function closeScheduleWorkOrderModal() {
			forceScheduleAssignmentCombo = false;
			$('#availabilityStartDate, #availabilityEndDate').val('');
		    $('#scheduleWorkOrderModal').fadeOut('fast');
		    $('#scheduleWorkOrderOverlay').removeClass('ma-in');
		    $('body').css('overflow', 'auto');
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method forces the availability checks 			*/
        /*		start date to be 3 days after a specified 			*/
        /*		ship date 											*/
        /*                                                 		 	*/
        /************************************************************/
        function inputAvailStart() {
			if ($('#scheduleWorkOrderShipDateRow').is(':visible') && $('#availabilityStartDate').val() != '') {
				var inputtedDate = moment(new Date($('#availabilityStartDate').val()));
				var shipDate = moment(new Date($('#scheduleWorkOrderShipDate').text())).add(3, 'days');

				if (shipDate > inputtedDate) {
					$('#availabilityStartDate').val(shipDate.format('MM/DD/YYYY'));
				}
			}

			checkAvailEnd();

		    $('#scheduleSeeAvailBtn').delay(175).fadeIn(175);
		    $('#scheduleBookBtn').fadeOut(175);
		    $('input[type="radio"][name="bookingWindow"]:checked').attr('checked', false);
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method forces the availability checks 			*/
        /*		end date to be greater than or equal 				*/
        /* 		to the start date 									*/
        /*                                                 		 	*/
        /************************************************************/
        function checkAvailEnd() {
			if ($('#availabilityStartDate').val() != '') {
				var inputtedEndDate = moment(new Date($('#availabilityEndDate').val()));
				var inputtedStartDate = moment(new Date($('#availabilityStartDate').val()));

				if (inputtedStartDate > inputtedEndDate) {
					$('#availabilityEndDate').val(inputtedStartDate.format('MM/DD/YYYY'));
				}
			}
			else {
				$('#availabilityEndDate').val('');
			}
		}

		/************************************************************/
        /*                                                  		*/
        /*      this method shows/hides the 			 			*/
        /*		check availability and book buttons 	 			*/
        /*                                                 		 	*/
        /************************************************************/
        function selectNextAvailable() {
		    $('#scheduleSeeAvailBtn').fadeOut(175);
		    $('#scheduleBookBtn').delay(175).fadeIn(175);
		    document.getElementById('availabilityEndDate').value = "";
		    document.getElementById('availabilityStartDate').value = "";
		}

	</script>

	<div id="scheduleWorkOrderModal" class="ma-modal">
	    <div id="scheduleWorkOrderContent" class="">
	        <div id="scheduleWorkOrder" class="">
	            <div id="scheduleWorkOrderHeader" class="">
	                <h3>Check Availability</h3>
	                <span id="scheduleWorkOrderModalClose" class="floatRight" onclick="closeScheduleWorkOrderModal();"><img src="{!URLFOR($Resource.MA_Scheduler, '/images/close_60.png')}" /></span>
	            </div>
	            <div id="scheduleWorkOrderBody" class="ma-modal-body">
	                <div class="ma-modal-padding">
	                    <table class="modal-text-table">
	                        <tbody>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Work Order:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span id="workOrderName"></span></label>
	                                    <input type="hidden" id="workOrderId" />
	                                </td>
	                            </tr>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Type:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span id="workOrderType"></span></label>
	                                </td>
	                            </tr>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Customer:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span id="workOrderContactName"></span></label>
	                                </td>
	                            </tr>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Home Phone:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span id="workOrderContactPhone"></span></label>
	                                </td>
	                            </tr>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Mobile Phone:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span id="workOrderContactMobilePhone"></span></label>
	                                </td>
	                            </tr>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Business Phone:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span id="workOrderContactBusinessPhone"></span></label>
	                                </td>
	                            </tr>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Address:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span class="ma-label-value" id="workOrderAddress"></span></label>
	                                </td>
	                            </tr>
	                            <tr>
	                                <td>
	                                    <label class="ma-input-label"><strong>Duration:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span class="ma-label-value" id="workOrderDuration"></span> (hours)</label>
	                                </td>
	                            </tr>
	                            <tr id="rescheduleReasonRow">
	                                <td>
	                                    <label class="ma-input-label"><strong>Reason:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <apex:form >
	                                    	<label class="ma-input-label"><span class="ma-label-value"></span><apex:inputField value="{!tempWo.Reschedule_Reason__c}" styleClass="rescheduleReason" /></label>
	                                    </apex:form>
	                                </td>
	                            </tr>
	                            <tr id="lastRescheduleReasonRow">
	                                <td>
	                                    <label class="ma-input-label"><strong>Last Reschedule:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span class="ma-label-value" id="lastRescheduleReason"></span></label>
	                                </td>
	                            </tr>
	                            <tr id="lastCancelReasonRow">
	                                <td>
	                                    <label class="ma-input-label"><strong>Last Cancel:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                	<label class="ma-input-label"><span class="ma-label-value" id="lastCancelReason"></span></label>
	                                </td>
	                            </tr>
	                            <tr id="lastWorkOrderCrewRow">
	                                <td>
	                                    <label class="ma-input-label"><strong>Last Crew:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                	<label class="ma-input-label"><span class="ma-label-value" id="lastWorkOrderCrew"></span></label>
	                                </td>
	                            </tr>
	                            <tr id="lastWorkOrderStainerRow">
	                                <td>
	                                    <label class="ma-input-label"><strong>Last Stainer:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                	<label class="ma-input-label"><span class="ma-label-value" id="lastWorkOrderStainer"></span></label>
	                                </td>
	                            </tr>
	                            <tr id="lastWorkOrderTechMeasureRow">
	                                <td>
	                                    <label class="ma-input-label"><strong>Last Tech Measure:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                	<label class="ma-input-label"><span class="ma-label-value" id="lastWorkOrderTechMeasure"></span></label>
	                                </td>
	                            </tr>
	                            <tr id="scheduleWorkOrderShipDateRow">
	                            	<td>
	                                    <label class="ma-input-label"><strong>Estimated Ship Date:</strong></label>
	                                </td>
	                                <td colspan="3">
	                                    <label class="ma-input-label"><span class="ma-label-value" id="scheduleWorkOrderShipDate"></span></label>
	                                </td>
	                            </tr>
	                            <tr class="align-top">
					                <div id="nextAvailableContainer">
					                    <td>
				                        	<label class="ma-input-label"><strong>Next Available (based on availability of skills):</strong></label>
			                        	</td>
				                        <td id="nextAvailableSlots" colspan="3"></td>
					                </div>
				                </tr>
				                <tr>
				                    <td colspan="4">
				                        <hr class="hr-legend"></hr>
				                    </td>
				                </tr>
	                            <tr class="modal-input-row">
	                                <td>
	                                    <label class="ma-input-label"><strong>Date:</strong></label>
	                                </td>
	                                <td>
	                                    <input type="text" class="ma-input" id="availabilityStartDate" onchange="inputAvailStart();"/>
	                                </td>
	                                <td> 
	                                    - 
	                                </td>
	                                <td>
	                                    <input type="text" class="ma-input" id="availabilityEndDate" onchange="checkAvailEnd();" />
	                                </td>
	                            </tr>
	                            <tr class="modal-input-row invisibleRow">
	                                <td>
	                                    <label class="ma-input-label"><strong>Time:</strong></label> 
	                                </td>
	                                <td>
	                                    <div class="timeDiv">
	                                        <label class="ma-input-label" style="margin-bottom:0;">Start:</label>
	                                        <div class="ma-form-control icon-right">
	                                            <img class="ma-icon icon-right" src="http://developer.cloudbilt.com/icons/utility/down_60.png" alt="drop down" />
	                                            <select class="startTime ma-input" />
	                                        </div>
	                                        <label class="ma-input-label">
	                                            <input type="radio" name="availableStartTime" value="AM" checked="true"> AM</input>&nbsp;&nbsp;
	                                            <input type="radio" name="availableStartTime" value="PM"> PM</input>
	                                        </label>
	                                    </div>
	                                </td>
	                                <td>
	                                    -
	                                </td>
	                                <td>
	                                    <div class="timeDiv">
	                                        <label class="ma-input-label" style="margin-bottom:0;">End:</label>
	                                        <div class="ma-form-control icon-right">
	                                            <img class="ma-icon icon-right" src="http://developer.cloudbilt.com/icons/utility/down_60.png" alt="drop down" />
	                                            <select class="endTime ma-input" />
	                                        </div>
	                                        <label class="ma-input-label">
	                                            <input type="radio" name="availableEndTime" value="AM" checked="true"> AM</input>&nbsp;&nbsp;
	                                            <input type="radio" name="availableEndTime" value="PM"> PM</input>
	                                        </label>
	                                    </div>
	                                </td>
	                            </tr>
	                        </tbody>
	                    </table>
	                </div>
	    
	                <div class="show-available-timeslots" style="display:none">
	                    <div id="availableSlotsContainer">
	                        <div class="ma-divider ma-divider-compact"></div>
	                        <div class="ma-modal-padding">
	                            <div><label class="ma-input-label"><strong>Available Time Slots (based on availability of skills):</strong></label></div>
	                            <div id="availableSlots"></div>
	                        </div>
	                    </div>
	    
	                    <div id="unAvailableSlotsContainer">
	                        <div class="ma-modal-padding">
	                            <div><label class="ma-input-label"><strong>Unavailable Time Slots:</strong></label></div>
	                            <div id="unAvailableSlots"></div>
	                        </div>
	                    </div>
	                </div>
	            </div>

	            <div class="ma-modal-footer">
	                <div id="scheduleWorkOrderButtons" class="ma-modal-padding clearfix">
	                    <button class="ma-button ma-button--white" onclick="closeScheduleWorkOrderModal();">Cancel</button>
	                    <button class="ma-button ma-button--green" id="scheduleSeeAvailBtn" onclick="checkAvailability(false);" style="display:none">See Available Times</button>
	                    <button class="ma-button ma-button--green" id="scheduleBookBtn" onclick="saveScheduleWorkOrder();">Book</button>
	                </div>
	            </div>
	        </div>
	    </div>
	</div>
	<div id="scheduleWorkOrderOverlay" class="ma-modal-overlay"></div>
</apex:component>