<apex:page standardController="OrderItem"
           extensions="RMS_addWarrantiesExt"
           showHeader="true" 
           sidebar="false"
           title="Add Warranties">
    
    <apex:includeScript value="/soap/ajax/26.0/connection.js"/>
    <apex:includeScript value="/support/console/26.0/integration.js"/>
    <apex:includeScript value="{!$Resource.jquery}" />
    
    <script type="text/javascript">
    window.onload = function() {
        // hideSelector();
        testOpenSubtab();
        //removeRequiredInput();
        
    };
    
    
    function testOpenSubtab() {
        //First find the ID of the primary tab to put the new subtab in
        sforce.console.getEnclosingPrimaryTabId(openSubtab);
    };
    
    var openSubtab = function openSubtab(result) {
        var primaryTabId = result.id;
        sforce.console.setTabTitle('Add Warranties');
    };
    
    
    
    </script>     
    
    
    
    <apex:form >
        <apex:pageMessages id="messages"/>
        <apex:pageBlock title="Add Warranties">
            <apex:pageBlockButtons >
                <apex:commandButton value="Cancel" action="{!cancel}" />
                <apex:commandButton value="Save" action="{!save}"/>
            </apex:pageBlockButtons>
            <apex:pageBlockSection id="childList" columns="1" title="Warranties" collapsible="false">
                <!-- There is a trick to creating a counter when rendering rows in a
pageBlockTable. You have to define a variable to default to 0,
and then update that variable inside the table row. This is the
way that I can leverage smart row deletes -->
                <apex:variable var="rowNum" value="{!ZERO}" />
                <apex:outputLabel value="No Warranties currently exist. Click below to Add." rendered="{!NOT(hasChildren)}"/>
                <apex:pageBlockTable value="{!children}" var="war" rendered="{!hasChildren}">
                    <apex:column headerValue="Charge Cost To">
                        <apex:selectList id="charge" value="{!war.Charge_Cost_To__c}" size="1" title="Charge Cost To" required="true">
                            <apex:selectOptions value="{!charges}"></apex:selectOptions>
                        </apex:selectList>
                    </apex:column>
                    <apex:column headerValue="Procedure Code">
                        <apex:selectList id="proc" value="{!war.Procedure_Code__c}" size="1" title="Procedure Code" required="true">
                            <apex:selectOptions value="{!procs}"></apex:selectOptions>
                        </apex:selectList>
                    </apex:column>
                    <apex:column headerValue="Quantity">
                        <apex:inputField value="{!war.Quantity__c}" required="true"/>
                    </apex:column>               
                    <!-- Add additional children metadata columns here -->
                    <apex:column headerValue=" ">
                        <!-- This is the second half of the trick to keep track
of your row index for deletion. -->
                        <apex:variable var="rowNum" value="{!rowNum + 1}" />
                        <apex:commandLink value="Delete" action="{!removeFromList}" rerender="childList, messages" immediate="true">
                            <apex:param name="removeIndex" assignTo="{!removeIndex}" value="{!rowNum}" />
                        </apex:commandLink>
                    </apex:column>
                </apex:pageBlockTable>
                <!-- Want to specify immediate here and above so validation does
not occur when you are trying to add/remove rows. Only want
validation to occur when trying to save -->
                <apex:commandButton value="Add Warranty" action="{!addToList}" rerender="childList, messages" immediate="true" />
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
</apex:page>