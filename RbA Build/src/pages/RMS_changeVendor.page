<apex:page standardController="Purchase_Order__c" extensions="RMS_vendorPurchaseOrderController" docType="html-5.0">

    <apex:includeScript value="{!$Resource.jquery}" />
    <apex:includeScript value="/support/console/33.0/integration.js"/>
    <apex:stylesheet value="{!URLFOR($Resource.spinner, 'spinner.css')}"/>
    <apex:form id="page-form" >

    <script>
    var j$ = jQuery.noConflict();

        //The callback function that closeTab will call once it's got the ID for its tab
        var callCloseTab= function callCloseTab(result) {
            sforce.console.closeTab(result.id);
        };
        function closeTab() {
            if(sforce.console.isInConsole()) {
                sforce.console.refreshPrimaryTabById( primaryTabId, false,
                    function()
                    {
                        if ( subTabId ) sforce.console.closeTab( subTabId );
                    }
                );
                return false;
            }
            else {
                location.href='/{!Purchase_Order__c.Order__c}'; 
            }

        
        };
        function openNewSubTab( subTabURL, subTabLabel )
        {
    
            //  if there's nowhere to go, and nowhere to go back to, just close this subtab
            if ( !subTabURL )
            {
                closeTab();
                return;
            }
            sforce.console.refreshPrimaryTabById( primaryTabId, false);
            sforce.console.openSubtab
            (   /*  Enclosing Primary Tab Id    */  primaryTabId,
                /*  URL for new Subtab        */  subTabURL,
                /*  Active (true = take focus)  */  true,
                /*  Label for new Subtab        */  subTabLabel,
                /*  Id of Subtab to override    */  subTabId,
                /*  Callback function          */  function( result ) { if ( !result.success ) alert( subTabLabel + ' subtab cannot be opened.' + '\n' + subTabURL ); },
                /*  Name for new Subtab      */  null
            );
        }
        function openNewPrimaryTab( subTabURL, subTabLabel )
        {
    
            //  if there's nowhere to go, and nowhere to go back to, just close this subtab
            if ( !subTabURL )
            {
                closeTab();
                return;
            }
            //  otherwise open the new subtab
            sforce.console.openPrimaryTab
            (   /*  Enclosing Primary Tab Id    */  null,
                /*  URL for new Subtab        */  subTabURL,
                /*  Active (true = take focus)  */  true,
                /*  Label for new Subtab        */  subTabLabel,
                /*  Callback function          */  function( result ) { if ( !result.success ) alert( subTabLabel + ' subtab cannot be opened.' + '\n' + subTabURL ); },
                /*  Name for new Subtab      */  null
            );
        }   
        
        function openSavedPO(poId, costPO)
        {
            var errorOccurred = '{!errorOccurred}';
            if (errorOccurred == 'false') {
                if(sforce.console.isInConsole()) {
                    if (costPO == 'false') {
                        openNewSubTab( '/' +poId +'?isdtp=vw', 'saving');
                    }
                    else {
                        openNewPrimaryTab( '/' +poId +'?isdtp=vw', 'saving');
                        closeTab();
                    }
                }
                else {
                    location.href='/apex/RMS_viewPurchaseOrder?id=' +poId;
                }
            }
        }

        function openNewPO(orderId, costPO)
        {
            var errorOccurred = '{!errorOccurred}';
            if (errorOccurred == 'false') {
                if(sforce.console.isInConsole()) {
                    if (costPO == 'false') {
                        openNewSubTab( '/apex/RMS_vendorPurchaseOrder?isdtp=vw&orderId=' +orderId, 'New Purchase Order' );
                    }
                    else {
                        openNewPrimaryTab( '/apex/RMS_vendorPurchaseOrder?isdtp=vw', 'New Purchase Order' );                    
//                      openNewPrimaryTab( '/' +poId +'?isdtp=vw', 'saving');
                        closeTab();
                    }       
                }
                else {
                    if (costPO == 'false') {
                        location.href='/apex/RMS_vendorPurchaseOrder?orderId=' +orderId;
                    }
                    else {
                        location.href='/apex/RMS_vendorPurchaseOrder';
                    }
                }
            }
        }
    function  getOrderId()
    {
        return document.getElementById( 'OrderId' ).innerHTML;
    }
    </script>
    
    <apex:pageMessages />  
        <apex:actionRegion >
        <apex:pageBlock title="{!pageTitle} Purchase Order - Change Vendor">

        <apex:pageBlockButtons location="bottom">
            <apex:commandButton onclick="showSpinner()" action="{!saveVendor}" value="Save" status="save-status" rerender="page-form" oncomplete="hideSpinner()"/>            
            <apex:commandButton onclick="showSpinner()" action="{!cancel}" value="Cancel" oncomplete="closeTab();return false"/>
        </apex:pageBlockButtons>            
            <apex:actionStatus id="save-status"  onstop="openSavedPO('{!poId}','{!costPurchaseOrder}');return false"/>
            <apex:actionStatus id="save-new-status"  onstop="openNewPO('{!orderId}','{!costPurchaseOrder}');return false"/>


            <apex:pageBlockSection title="Select a Vendor" columns="1" rendered="{(!newPurchaseOrder && renderVendorSelection)|| !servicePurchaseOrder}" > 
                <apex:pageBlockSectionItem rendered="{!costPurchaseOrder == false}">
                    <apex:selectList value="{!selectedVendor}" label="Vendor" size="1" id="VendorList">
                        <apex:selectOptions value="{!availableVendors}"/>
                        <apex:actionSupport event="onchange" action="{!updateSubTotal}" reRender="PurchaseOrderFields" />
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!costPurchaseOrder == true}">
                    <c:AutoCompleteV2 allowClear="true" importJquery="true" labelField="Name" SObject="Account" syncManualEntry="false" valueField="Id" targetField="{!selectedVendor}" style="width:250px" extraQueriesAttribute="{!vendorQueries}" extraVariablesAttribute="{!vendorVariables}" Application="POVendor"/> 
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            
            <apex:pageBlockSection title="Select a Vendor" columns="1" rendered="{!servicePurchaseOrder}" > 
                <apex:pageBlockSectionItem >
                    <c:AutoCompleteV2 allowClear="true" importJquery="true" labelField="Name" SObject="Account" syncManualEntry="false" valueField="Id" targetField="{!selectedVendor}" style="width:250px" extraQueriesAttribute="{!vendorQueries}" extraVariablesAttribute="{!vendorVariables}" Application="POVendor"/> 
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            
            
            
            <apex:pageBlockSection title="Select a Vendor" columns="1" rendered="{!newPurchaseOrder != true && servicePurchaseOrder != true}" > 
                <apex:outputField value="{!Purchase_Order__c.Vendor__c}" label="Selected Vendor"/>
            </apex:pageBlockSection> 
            <div id="OrderId" style="display:none;">{!orderId}</div>      
                   
        </apex:pageBlock>

    </apex:actionRegion>


    </apex:form>
   <div id="opaque"/>
   <div id="spinner">
    <p style="text-align: center; margin-top: 5px; margin-bottom: 5px;">
        <apex:image id="theImage" value="{!$Resource.LoadingPage}" width="50"/>
    </p>
   </div>
    <script type="text/javascript">
        var j$ = jQuery.noConflict();

        var primaryTabId = null;
        var subTabId = null;
        var previousOnload  = window.onload;

        window.onload = function()
        {
        
            //  perform the previously registered 'onload' function, if any
            if ( previousOnload ) previousOnload();

            //  get the id's of both the primary tab and this subtab
            sforce.console.getEnclosingPrimaryTabId ( function( result ) { primaryTabId = result.id; } );
            sforce.console.getEnclosingTabId        ( function( result ) { subTabId  = result.id; } );

            //  set the title of this subtab
            sforce.console.setTabTitle( '{!Purchase_Order__c.Id}' ? '* {!Purchase_Order__c.Name}' : 'New Purchase Order' );

        };

        function setFocusOnLoad() {
            // Do nothing. This keeps standard Salesforce from giving focus to the first
            // field so that the calendar widget won't pop up.
        }
    function showSpinner()
    {
       document.getElementById('opaque').style.display='block';
       var popUp = document.getElementById('spinner');
      
       popUp.style.display = 'block';
    } 

    function hideSpinner()
    {
       document.getElementById('opaque').style.display='none';
       var popUp = document.getElementById('spinner');
      
       popUp.style.display = 'none';
    } 

    </script>
</apex:page>